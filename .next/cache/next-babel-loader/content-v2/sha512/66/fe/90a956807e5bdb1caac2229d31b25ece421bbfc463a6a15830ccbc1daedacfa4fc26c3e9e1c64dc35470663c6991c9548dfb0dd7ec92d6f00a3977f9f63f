{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gabriel/Documentos/codigos/Cursos-React/web/src/pages/episodes/[slug].tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { useRouter } from 'next/router';\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utilis/convertDurationToTimeString';\nexport default function data() {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: router.query.slug\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {},\n    revalidade: 60 * 60 * 24 // 24 hours\n\n  };\n};","map":{"version":3,"sources":["/home/gabriel/Documentos/codigos/Cursos-React/web/src/pages/episodes/[slug].tsx"],"names":["format","parseISO","ptBR","useRouter","api","convertDurationToTimeString","data","router","query","slug","getStaticProps","ctx","params","get","episode","id","title","thumbnail","members","publishedAt","published_at","locale","duration","Number","file","durationAsString","description","url","props","revalidade"],"mappings":";;AAAA,SAASA,MAAT,EAAkBC,QAAlB,QAAkC,UAAlC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAAQC,GAAR,QAAmB,oBAAnB;AACA,SAASC,2BAAT,QAA4C,0CAA5C;AACA,eAAe,SAASC,IAAT,GAAe;AAC1B,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,sBACI;AAAA,cAAKI,MAAM,CAACC,KAAP,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AAED,OAAO,MAAMC,cAA8B,GAAG,MAAOC,GAAP,IAAa;AACvD,QAAM;AAAEF,IAAAA;AAAF,MAAWE,GAAG,CAACC,MAArB;AACA,QAAM;AAAEN,IAAAA;AAAF,MAAW,MAAMF,GAAG,CAACS,GAAJ,CAAS,aAAYJ,IAAK,EAA1B,CAAvB;AACA,QAAMK,OAAO,GAAG;AACZC,IAAAA,EAAE,EAAET,IAAI,CAACS,EADG;AAEdC,IAAAA,KAAK,EAAEV,IAAI,CAACU,KAFE;AAGdC,IAAAA,SAAS,EAAEX,IAAI,CAACW,SAHF;AAIdC,IAAAA,OAAO,EAAEZ,IAAI,CAACY,OAJA;AAKdC,IAAAA,WAAW,EAAEnB,MAAM,CAACC,QAAQ,CAACK,IAAI,CAACc,YAAN,CAAT,EAA8B,UAA9B,EAA0C;AAAEC,MAAAA,MAAM,EAAEnB;AAAV,KAA1C,CALL;AAMdoB,IAAAA,QAAQ,EAAEC,MAAM,CAACjB,IAAI,CAACkB,IAAL,CAAUF,QAAX,CANF;AAOdG,IAAAA,gBAAgB,EAAEpB,2BAA2B,CAACkB,MAAM,CAACjB,IAAI,CAACkB,IAAL,CAAUF,QAAX,CAAP,CAP/B;AAQdI,IAAAA,WAAW,EAAEpB,IAAI,CAACoB,WARJ;AASdC,IAAAA,GAAG,EAAErB,IAAI,CAACkB,IAAL,CAAUG;AATD,GAAhB;AAWA,SAAM;AACFC,IAAAA,KAAK,EAAC,EADJ;AAEFC,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU,EAFpB,CAEwB;;AAFxB,GAAN;AAKH,CAnBM","sourcesContent":["import { format , parseISO } from 'date-fns'\nimport ptBR from 'date-fns/locale/pt-BR'\nimport { useRouter } from 'next/router'\nimport { GetStaticProps } from 'next'\nimport {api } from '../../services/api'\nimport { convertDurationToTimeString } from '../../utilis/convertDurationToTimeString'\nexport default function data(){\n    const router = useRouter()\n    return(\n        <h1>{router.query.slug}</h1>\n    )\n}\n\nexport const getStaticProps: GetStaticProps = async (ctx)=>{\n    const { slug } = ctx.params\n    const { data } = await api.get(`/episodes/${slug}`)\n    const episode = {\n        id: data.id,\n      title: data.title,\n      thumbnail: data.thumbnail,\n      members: data.members,\n      publishedAt: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR }),\n      duration: Number(data.file.duration),\n      durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n      description: data.description,\n      url: data.file.url,\n    }\n    return{\n        props:{},\n        revalidade: 60 * 60 * 24, // 24 hours\n\n    }\n}"]},"metadata":{},"sourceType":"module"}