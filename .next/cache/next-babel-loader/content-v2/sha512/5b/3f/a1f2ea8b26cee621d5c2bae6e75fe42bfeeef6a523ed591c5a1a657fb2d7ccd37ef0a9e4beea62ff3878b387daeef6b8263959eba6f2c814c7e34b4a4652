{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gabriel/Documentos/codigos/Cursos-React/web/src/pages/episodes/[slug].tsx\";\nimport styles from './episode.module.scss';\nimport Image from 'next/image';\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  var episode = _ref.episode;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/arrow-left.svg\",\n          alt: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/home/gabriel/Documentos/codigos/Cursos-React/web/src/pages/episodes/[slug].tsx"],"names":["styles","Image","Episode","episode","thumbnailContainer","thumbnail"],"mappings":";;AAMA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAgBA,eAAe,SAASC,OAAT,OAAwC;AAAA,MAAtBC,OAAsB,QAAtBA,OAAsB;AAEnD,sBACI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACG,OAAvB;AAAA,2BACF;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACI,kBAAvB;AAAA,8BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,+BACI;AAAK,UAAA,GAAG,EAAC,iBAAT;AAA2B,UAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,KAAD;AACA,QAAA,KAAK,EAAE,GADP;AAEA,QAAA,MAAM,EAAE,GAFR;AAGA,QAAA,GAAG,EAAED,OAAO,CAACE,SAHb;AAIA,QAAA,SAAS,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;KAjBuBH,O","sourcesContent":["import { format , parseISO } from 'date-fns'\nimport ptBR from 'date-fns/locale/pt-BR'\nimport { useRouter } from 'next/router'\nimport { GetStaticPaths, GetStaticProps } from 'next'\nimport {api } from '../../services/api'\nimport { convertDurationToTimeString } from '../../utilis/convertDurationToTimeString'\nimport styles from './episode.module.scss'\nimport Image from 'next/image'\n\ntype Episode = {\n    id: string;\n    title: string;\n    thumbnail: string;\n    description: string;\n    members: string;\n    duration: number;\n    durationAsString: string;\n    url: string;\n    publishedAt: string;\n}\ntype EpisodeProps = {\n    episode:Episode;\n}\nexport default function Episode({episode}:EpisodeProps){\n    \n    return(\n        <div className={styles.episode}>\n      <div className={styles.thumbnailContainer}>\n          <button type=\"button\">\n              <img src=\"/arrow-left.svg\" alt=\"Voltar\"/>\n          </button>\n          <Image \n          width={700}\n          height={160}\n          src={episode.thumbnail}\n          objectFit=\"cover\"\n          />\n      </div>\n        </div>\n    )\n}\nexport const getStaticPaths: GetStaticPaths = async () =>\n{\n    return {\n        paths: [],\n        fallback:'blocking'\n    }\n}\nexport const getStaticProps: GetStaticProps = async (ctx)=>{\n    const { slug } = ctx.params\n    const { data } = await api.get(`/episodes/${slug}`)\n    const episode = {\n        id: data.id,\n      title: data.title,\n      thumbnail: data.thumbnail,\n      members: data.members,\n      publishedAt: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR }),\n      duration: Number(data.file.duration),\n      durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n      description: data.description,\n      url: data.file.url,\n    }\n    return{\n        props:{\n            episode,\n\n        },\n        revalidade: 60 * 60 * 24, // 24 hours\n\n    }\n}"]},"metadata":{},"sourceType":"module"}