{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gabriel/Documentos/codigos/Cursos-React/web/src/pages/episodes/[slug].tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { useRouter } from 'next/router';\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utilis/convertDurationToTimeString';\nimport styles from './episode.module.scss';\nimport Image from 'next/image';\nimport Link from 'next/link';\nexport default function Episode({\n  episode\n}) {\n  const router = useRouter();\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/arrow-left.svg\",\n            alt: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/play.svg\",\n          alt: \"tocar epis\\xF3dio \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.publishedAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.durationAsString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      dangerouslySetInnerHTML: {\n        __html: episode.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: 'blocking'\n  };\n};\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24 // 24 hours\n\n  };\n};","map":{"version":3,"sources":["/home/gabriel/Documentos/codigos/Cursos-React/web/src/pages/episodes/[slug].tsx"],"names":["format","parseISO","ptBR","useRouter","api","convertDurationToTimeString","styles","Image","Link","Episode","episode","router","isFallback","thumbnailContainer","thumbnail","title","members","publishedAt","durationAsString","description","__html","getStaticPaths","paths","fallback","getStaticProps","ctx","slug","params","data","get","id","published_at","locale","duration","Number","file","url","props","revalidate"],"mappings":"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","sourcesContent":["import { format, parseISO } from 'date-fns'\nimport ptBR from 'date-fns/locale/pt-BR'\nimport { useRouter } from 'next/router'\nimport { GetStaticPaths, GetStaticProps } from 'next'\nimport { api } from '../../services/api'\nimport { convertDurationToTimeString } from '../../utilis/convertDurationToTimeString'\nimport styles from './episode.module.scss'\nimport Image from 'next/image'\nimport Link from 'next/link'\n\ntype Episode = {\n    id: string;\n    title: string;\n    thumbnail: string;\n    description: string;\n    members: string;\n    duration: number;\n    durationAsString: string;\n    url: string;\n    publishedAt: string;\n}\ntype EpisodeProps = {\n    episode: Episode;\n}\nexport default function Episode({ episode }: EpisodeProps) {\n    const router = useRouter();\n\n    if(router.isFallback){\n        return <p>Carregando</p>\n    }\n\n    return (\n        <div className={styles.episode}>\n            <div className={styles.thumbnailContainer}>\n                <Link href=\"/\">\n                    <button type=\"button\">\n                        <img src=\"/arrow-left.svg\" alt=\"Voltar\" />\n                    </button>\n                </Link>\n                <Image\n                    width={700}\n                    height={160}\n                    src={episode.thumbnail}\n                    objectFit=\"cover\"\n                />\n                <button type=\"button\">\n                    <img src=\"/play.svg\" alt=\"tocar episÃ³dio \" />\n                </button>\n            </div>\n            <header>\n                <h1>{episode.title}</h1>\n                <span>{episode.members}</span>\n                <span>{episode.publishedAt}</span>\n                <span>{episode.durationAsString}</span>\n            </header>\n\n            <div className={styles.description} dangerouslySetInnerHTML={{ __html: episode.description }}>\n            </div>\n        </div>\n    )\n}\nexport const getStaticPaths: GetStaticPaths = async () => {\n    return {\n        paths: [\n        ],\n        fallback: 'blocking'\n    }\n}\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n    const { slug } = ctx.params\n    const { data } = await api.get(`/episodes/${slug}`)\n    const episode = {\n        id: data.id,\n        title: data.title,\n        thumbnail: data.thumbnail,\n        members: data.members,\n        publishedAt: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR }),\n        duration: Number(data.file.duration),\n        durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n        description: data.description,\n        url: data.file.url,\n    }\n    return {\n        props: {\n            episode,\n        },\n        revalidate: 60 * 60 * 24 // 24 hours\n    }\n}"]},"metadata":{},"sourceType":"module"}